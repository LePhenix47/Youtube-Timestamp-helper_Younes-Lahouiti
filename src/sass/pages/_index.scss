@use "../utils/" as *;

.index {
    display: grid;
    grid-template-columns: [full-width-start] minmax(325px, 1fr) auto [full-width-end];
    align-items: start;
    column-gap: 10px;

    padding-inline: 15px;
    padding-block: 30px;

    overflow-x: clip;
}

@view-transition {
    navigation: auto;
}


::view-transition-group(root) {}

.video {
    object-fit: contain;
    filter: url(#blur-and-scale);

    width: 100%;
    height: auto;

    min-height: 425px;

    &__container {
        @include center-flex-column;

        justify-content: flex-start;

        position: relative;
    }

    &__no-video {
        width: 100%;
        height: 100%;

        @include center-flex-column(20px);

        --_border-color: rgb(from var(--color-primary) r g b / 50%);

        border: 2px dotted var(--_border-color);
        border-radius: 6px;

        &.dragging {
            background-color: rgba(128, 128, 128, 25%);
            border-style: dashed;

            --_border-color: var(--color-primary);
        }
    }

    &__no-video-icon {
        font-size: 64px;
    }

    &__no-video-spinner {
        --_size: 64px;
    }

    &__controls {
        background-color: purple;
        width: 100%;

        position: absolute;
        bottom: 0;
    }

    &__progress {
        --_pb-height: 3;
        height: calc(var(--_pb-height) * 1px);

        width: 100%;

        position: relative;

        --_video-duration-ms: 1000;

        // ? for the actual video progress
        --_current-video-progress-ms: 650;

        // ? for hover progress
        --_current-video-hover-ms: 750;

        --_total-video-progress: calc(var(--_current-video-progress-ms) / var(--_video-duration-ms) * 100%);

        --_chunks-gap: 3px;

        &:hover .video__progress-bar-chunk:not(:hover) {
            --_new-pb-height: 5;
            --_scale-y: calc(var(--_new-pb-height) / var(--_pb-height));

            scale: 1 var(--_scale-y);
        }
    }


    &__progress-bar-chunk {
        // ? Variable for computing stuff (my name is stuff)
        // ? Timestamps for the chunk in milliseconds to get the duration
        /* --_chunk-start-ms: 0; */
        /* --_chunk-end-ms: 500; */

        --_chunk-duration-ms: calc(var(--_chunk-end-ms) - var(--_chunk-start-ms));
        --_elapsed-time-in-chunk-ms: calc(var(--_current-video-progress-ms) - var(--_chunk-start-ms));
        --_elapsed-hover-in-chunk-ms: calc(var(--_current-video-hover-ms) - var(--_chunk-start-ms));

        // ? Vars for the children
        --_chunk-progress: calc(max(0, var(--_elapsed-time-in-chunk-ms)) / var(--_chunk-duration-ms) * 100%);
        --_chunk-hover-progress: calc(max(0, var(--_elapsed-hover-in-chunk-ms))/ var(--_chunk-duration-ms) * 100%);

        // ? Vars for the current chunk
        --_chunk-size: calc(var(--_chunk-duration-ms) / var(--_video-duration-ms) * 100%);
        --_chunk-position: calc(var(--_chunk-start-ms) / var(--_video-duration-ms) * 100%);

        height: 100%;

        position: absolute;
        isolation: isolate;

        background-color: rgba(255, 255, 255, 25%);

        width: calc(var(--_chunk-size) - var(--_chunks-gap));
        left: clamp(0%, var(--_chunk-position) + var(--_chunks-gap), 100% - var(--_chunks-gap));

        &:first-child {
            width: var(--_chunk-size);
            left: clamp(0%, var(--_chunk-position), 100%);
        }

        transition: scale 150ms ease-in-out;

        &:hover {
            --_new-pb-height: 9;
            --_scale-y: calc(var(--_new-pb-height) / var(--_pb-height));

            scale: 1 var(--_scale-y);
        }
    }

    &__progress-chunk-progress {

        width: var(--_chunk-progress);
        max-width: 100%;

        background-color: var(--yt-color);

        height: 100%;

        &--hover-progress {
            width: var(--_chunk-hover-progress);

            position: absolute;
            top: 0;
            z-index: -1;
            background-color: rgba(255, 255, 255, 50%);
        }
    }

    &__progress-thumb {
        background-color: var(--yt-color);
        border-radius: 50%;

        --_size: 14px;

        position: absolute;
        top: calc(50% - var(--_size) / 2);
        left: clamp(0%, var(--_total-video-progress), 100%);

        anchor-name: --progress-thumb;

        translate: -50% 0%;

        z-index: 2;

        transition: scale 150ms ease-in-out;

        // ? If the user hovered a chunk bar where the thumb is â†’ scale it up 
        &.chunk-hover {
            scale: 1.5;
        }
    }


    &__progress-frame {
        @include center-flex-column(10px);

        position: absolute;
        position-anchor: --progress-thumb;

        bottom: anchor(top);

        --_frame-width: 150px;
        left: clamp(var(--_frame-width)/2, anchor(50%), 100% - var(--_frame-width)/2);

        translate: -50% 0%;

        width: var(--_frame-width);
        min-height: 150px;

        overflow: hidden;

        margin-bottom: 5px;

        color: inherit;
    }

    &__progress-frame-img {
        width: 150px;
        height: 110px;
        object-fit: cover;

        border: 2px solid currentColor;
        border-radius: 8px;
    }

}

.video-timestamps {

    max-height: var(--_video-height, 300px);
    overflow-y: auto;

    border-radius: 5px;

    background-color: var(--ts-container-bg);

    padding: 5px;

    z-index: 1;

    &__title {
        background-color: inherit;
        border-radius: inherit;

        position: sticky;

        --_title-padding: 5px;
        padding: var(--_title-padding);
        margin: calc(-1 * var(--_title-padding));

        position: sticky;
        top: calc(-1 * var(--_title-padding));
    }

    &__list {
        margin-top: 25px;

        @include center-flex-column(20px);
        counter-reset: timestamps;
    }

    &__item {
        display: grid;
        grid-template-columns: [full-width-start img-start] auto [img-end timestamps-controls-start] 1fr [timestamps-controls-end full-width-end];
        grid-template-rows: repeat(3, auto);
        column-gap: 20px;
        row-gap: 10px;


        padding: 10px;

        background-color: var(--ts-item-bg);
        border-radius: 5px;

        counter-increment: timestamps;
    }

    &__item-title {
        grid-column: full-width;

        &::before {
            content: "Chapter " counter(timestamps) ": ";
        }
    }

    &__img {
        object-fit: cover;

        height: 55px;

        overflow: hidden;

        border-radius: 5px;

        grid-column: img;
    }

    &__labels-container {
        display: grid;
        grid-template-columns: [full-width-label-start label-start] max-content [label-end input-start] 1fr [input-end full-width-label-end];
        row-gap: 10px;

        grid-column: timestamps-controls;
    }

    &__label {
        display: grid;
        grid-column: full-width-label;
        grid-template-columns: subgrid;
        column-gap: 10px;

        align-items: center;
    }

    &__input {
        padding: 5px 10px;

        border-radius: 100vmax;

        background: var(--ts-input-bg);
    }

    &__remove {

        color: white;
        background-color: red;
        margin-left: auto;

        border-radius: 5px;
        padding: 5px 10px;


        width: 50%;

        grid-column: 2;
    }

    &__remove-text {
        width: 100%;
    }

    &__remove-icon {
        justify-self: flex-start;
        height: 10px;

        margin-top: 3px;
    }
}

.video-timestamp-outputs {
    grid-column: full-width;
}