@use "../utils/" as *;

.index {
    display: grid;
    grid-template-columns: [full-width-start] minmax(325px, 1fr) auto [full-width-end];
    align-items: start;
    column-gap: 10px;

    padding-inline: 15px;
    padding-block: 30px;

    overflow-x: clip;
}

@view-transition {
    navigation: auto;
}


::view-transition-group(root) {}

.video {
    object-fit: contain;
    filter: url(#blur-and-scale);

    width: 100%;
    height: auto;

    min-height: 425px;

    border-radius: inherit;


    &__container {
        @include center-flex-column;

        justify-content: flex-start;

        position: relative;
        border-radius: 8px;

        // ? If the video is playing and we're not hovering the video → hide the controls
        &:not(:hover):has(>.video__controls .video-options__play-input-toggle:not(:checked))>.video__controls {
            opacity: 0;
        }
    }

    &__no-video {
        width: 100%;
        height: 100%;

        @include center-flex-column(20px);

        --_border-color: rgb(from var(--color-primary) r g b / 50%);

        border: 2px dotted var(--_border-color);
        border-radius: 6px;

        &.dragging {
            background-color: rgba(128, 128, 128, 25%);
            border-style: dashed;

            --_border-color: var(--color-primary);
        }
    }

    &__no-video-icon {
        font-size: 64px;
    }

    &__no-video-spinner {

        &>.square {
            --_size: 64px;
        }
    }

    &__controls {
        @include center-flex-column(15px);
        align-items: flex-start;

        --_fade-height: 90%;
        background-image: linear-gradient(0deg,
                rgba(0, 0, 0, 50%) 0px,
                transparent var(--_fade-height));

        color: white;

        border-radius: inherit;

        width: 100%;

        padding: 5px;

        position: absolute;
        bottom: 0;

        transition: opacity 150ms ease-in-out;
    }

    &__progress {
        --_pb-height: 3;
        height: calc(var(--_pb-height) * 1px);


        width: 100%;

        position: relative;

        // ? For the total video duration
        --_video-duration-secs: 1000;

        // ? for the actual video progress
        --_current-video-progress-secs: 650;

        // ? for hover progress
        --_current-video-hover-secs: 750;

        --_total-video-progress: calc(var(--_current-video-progress-secs) / var(--_video-duration-secs) * 100%);

        --_buffer-end-secs: 860;

        --_chunks-gap: 3px;

        &:hover .video__progress-bar-chunk:not(:hover) {
            --_new-pb-height: 5;
            --_scale-y: calc(var(--_new-pb-height) / var(--_pb-height));

            scale: 1 var(--_scale-y);
        }
    }


    &__progress-bar-chunk {
        // ? Variable for computing stuff (my name is stuff)
        // ? Timestamps for the chunk in milliseconds to get the duration
        /* --_chunk-start-secs: 0; */
        /* --_chunk-end-secs: 500; */

        --_chunk-duration-secs: calc(var(--_chunk-end-secs) - var(--_chunk-start-secs));
        --_elapsed-time-in-chunk-secs: calc(var(--_current-video-progress-secs) - var(--_chunk-start-secs));
        --_elapsed-hover-in-chunk-secs: calc(var(--_current-video-hover-secs) - var(--_chunk-start-secs));
        --_elapsed-buffer-in-chunk: calc((var(--_buffer-end-secs) - var(--_chunk-start-secs)));

        // ? Vars for the children
        --_chunk-progress: calc(max(0, var(--_elapsed-time-in-chunk-secs)) / var(--_chunk-duration-secs) * 100%);
        --_chunk-hover-progress: calc(max(0, var(--_elapsed-hover-in-chunk-secs))/ var(--_chunk-duration-secs) * 100%);
        --_chunk-buffered-progress:
            calc(max(0, var(--_elapsed-buffer-in-chunk)) / var(--_chunk-duration-secs) * 100%);


        // ? Vars for the current chunk
        --_chunk-size: calc(var(--_chunk-duration-secs) / var(--_video-duration-secs) * 100%);
        --_chunk-position: calc(var(--_chunk-start-secs) / var(--_video-duration-secs) * 100%);

        height: 100%;

        display: flex;
        justify-content: space-between;

        position: absolute;
        isolation: isolate;

        background-color: rgba(255, 255, 255, 25%);

        width: calc(var(--_chunk-size) - var(--_chunks-gap));
        left: clamp(0%, var(--_chunk-position) + var(--_chunks-gap), 100% - var(--_chunks-gap));

        &:first-child {
            width: var(--_chunk-size);
            left: clamp(0%, var(--_chunk-position), 100%);
        }

        transition: scale 150ms ease-in-out;

        &:hover {
            --_new-pb-height: 9;
            --_scale-y: calc(var(--_new-pb-height) / var(--_pb-height));

            scale: 1 var(--_scale-y);

            cursor: pointer;
        }
    }

    &__progress-chunk-progress {
        position: absolute;

        width: var(--_chunk-progress);
        max-width: 100%;

        background-color: var(--yt-color);

        height: 100%;

        &--hover-progress {
            width: var(--_chunk-hover-progress);

            position: absolute;
            z-index: -1;
            background-color: rgba(255, 255, 255, 50%);
        }

        &--buffer-progress {
            width: var(--_chunk-buffered-progress);

            position: absolute;
            z-index: -2;
            background-color: rgba(255, 255, 255, 25%);
        }
    }

    &__progress-drag-slide {
        display: flex;

        width: 10px;
        height: 100%;
        z-index: 1;

        --_stripe-width: 1px;
        --_stripe-gap: 2px;
        --_stripe-color: blue;

        background-image: repeating-linear-gradient(45deg,
                var(--_stripe-color) 0,
                var(--_stripe-color) var(--_stripe-width), transparent var(--_stripe-width),
                transparent calc(var(--_stripe-width) + var(--_stripe-gap)));

        outline: 1px solid rgba(255, 255, 255, 50%);

        touch-action: none;
        user-select: none;

        &--start {
            --_stripe-color: yellow;
        }

        &--end {
            --_stripe-color: purple;
        }
    }

    &__progress-thumb {
        background-color: var(--yt-color);
        border-radius: 50%;

        --_size: 14px;

        position: absolute;
        top: calc(50% - var(--_size) / 2);
        left: clamp(0%, var(--_total-video-progress), 100%);

        anchor-name: --progress-thumb;

        translate: -50% 0%;

        z-index: 2;

        transition: scale 150ms ease-in-out;

        touch-action: none;
        user-select: none;

        // ? If the user hovered a chunk bar where the thumb is → scale it up 
        &.scrub-chunk-overlap {
            scale: 1.5;
        }
    }


    &__progress-frame {
        @include center-flex-column(10px);

        position: absolute;
        position-anchor: --progress-thumb;

        bottom: anchor(top);

        --_frame-width: 200px;
        left: clamp(var(--_frame-width)/2, anchor(50%), 100% - var(--_frame-width)/2);

        translate: -50% 0%;

        width: var(--_frame-width);
        min-height: 150px;

        overflow: hidden;

        margin-bottom: 5px;

        color: inherit;

        transition:
            opacity 150ms ease-in-out,
            visibility 150ms ease-in-out;

        opacity: 0;
        visibility: collapse;

        &.scrubbing {
            visibility: visible;
            opacity: 1;
        }
    }

    &__progress-frame-img {
        width: 100%;
        height: 110px;
        object-fit: cover;

        border: 2px solid white;
        border-radius: 8px;
    }

    &__progress-frame-caption {
        display: inline-flex;
        flex-direction: column;
        align-items: center;

        color: white;

        text-shadow: 0 0 5px black;

        text-align: center;

        font-size: 14px;
    }

    &__progress-frame-timestamp {
        font-variant-numeric: tabular-nums;
    }
}


.video-indicators {
    position: absolute;
    inset: 0;
    pointer-events: none;

    border-radius: inherit;

    // ? We can show animations 
    &:has(+.video__controls .video-options__play-input-toggle:checked) .video-indicators__video-indicator--pause {
        display: flex;
        animation: bezel-fade-out 500ms linear forwards;
    }

    &:has(+.video__controls .video-options__play-input-toggle:not(:checked)) .video-indicators__video-indicator--play {
        display: flex;
        animation: bezel-fade-out 500ms linear forwards;
    }

    &__video-indicator {
        @include center-flex;

        position: absolute;
        top: 50%;
        left: 50%;

        translate: -50% -50%;

        --_size: 52px;
        background-color: rgba(0, 0, 0, 50%);
        border-radius: 50%;

        display: none;
    }

    &__skip {
        @include center-flex-column(10px);

        position: absolute;
        top: 50%;
        --_inline-offset: 25px;

        translate: 0 -50%;

        --_size: 110px;
        background-color: rgba(0, 0, 0, 50%);
        border-radius: 50%;

        /* must be in % to work */
        --_shine-width: 10%;
        --_shine-position: 50%;

        mask-size: 200% 100%;
        mask-repeat: repeat;

        mask-image: linear-gradient(45deg,
                black calc(var(--_shine-position) - var(--_shine-width)),
                transparent var(--_shine-position),
                black calc(var(--_shine-position) + var(--_shine-width)));

        mask-position: 0% 100%;
        animation: shine-animation-mask 0.5s linear;
        animation-iteration-count: 3;


        &>i {
            font-size: 24px;
        }

        &>span {
            font-size: 11px;
            user-select: none;
        }

        &--backwards {
            left: var(--_inline-offset)
        }

        &--forwards {
            right: var(--_inline-offset)
        }
    }


    &__video-buffer {
        border-radius: inherit;
        position: absolute;

        @include center-flex;



        background-color: rgba(0, 0, 0, 50%);
        width: 100%;
        height: 100%;


        &>.square {
            --_size: 64px;
        }
    }
}

@keyframes shine-animation-mask {
    0% {
        opacity: 50%;
        mask-position: 150% 100%;
    }

    50% {
        opacity: 1;

    }

    99% {
        opacity: 50%;
        mask-position: -50% 100%;
    }
}

@keyframes bezel-fade-out {
    0% {
        opacity: 1;
        scale: 1;
    }

    100% {
        opacity: 0;
        scale: 2
    }

}

.video-options {
    display: flex;

    gap: 20px;

    padding-inline: 10px;
    padding-bottom: 5px;

    &__video-play {
        @include center-flex;

        --_size: 20px;
        font-size: 20px;

        place-items: center;
        border: none;

        color: inherit;

        &:has(> input:checked)>.fa-pause {
            display: none;
        }

        &:not(:has(> input:checked))>.fa-play {
            display: none;
        }
    }

    &__video-volume {
        height: 20px;
        width: 20px;


        overflow: clip;

        display: flex;
        align-items: center;

        transition: width 150ms ease-in-out;

        &:hover {
            width: max-content;
        }
    }

    &__video-volume-range {
        margin-left: 5px;

        --_range-bg: rgba(255, 255, 255, 0.25);
        --_progress-bg: white;
    }

    &__timestamp-info {
        font-size: 13px;

        display: flex;
        align-items: center;
        gap: 5px;
    }

    &__timestamp {
        font-variant-numeric: tabular-nums;
    }

    &__timestamp-chapter {
        color: inherit;
    }
}

.video-timestamps {

    max-height: var(--_video-height, 300px);
    overflow-y: auto;

    border-radius: 5px;

    background-color: var(--ts-container-bg);

    padding: 5px;

    z-index: 1;

    &__title {
        background-color: inherit;
        border-radius: inherit;

        position: sticky;

        --_title-padding: 5px;
        padding: var(--_title-padding);
        margin: calc(-1 * var(--_title-padding));

        position: sticky;
        top: calc(-1 * var(--_title-padding));
    }

    &__list {
        margin-top: 25px;

        @include center-flex-column(20px);
        counter-reset: timestamps;
    }

    &__item {
        display: grid;
        grid-template-columns: [full-width-start img-start] auto [img-end timestamps-controls-start] 1fr [timestamps-controls-end full-width-end];
        grid-template-rows: repeat(3, auto);
        column-gap: 20px;
        row-gap: 10px;


        padding: 10px;

        background-color: var(--ts-item-bg);
        border-radius: 5px;

        counter-increment: timestamps;
    }

    &__item-title {
        grid-column: full-width;

        &::before {
            content: "Chapter " counter(timestamps) ": ";
        }
    }

    &__img {
        object-fit: cover;

        height: 55px;

        overflow: hidden;

        border-radius: 5px;

        grid-column: img;
    }

    &__labels-container {
        display: grid;
        grid-template-columns: [full-width-label-start label-start] max-content [label-end input-start] 1fr [input-end full-width-label-end];
        row-gap: 10px;

        grid-column: timestamps-controls;
    }

    &__label {
        display: grid;
        grid-column: full-width-label;
        grid-template-columns: subgrid;
        column-gap: 10px;

        align-items: center;
    }

    &__input {
        padding: 5px 10px;

        border-radius: 100vmax;

        background-color: var(--ts-input-bg);
    }

    &__remove {

        color: white;
        background-color: red;
        margin-left: auto;

        border-radius: 5px;
        padding: 5px 10px;


        width: 50%;

        grid-column: 2;
    }

    &__remove-text {
        width: 100%;
    }

    &__remove-icon {
        justify-self: flex-start;
        height: 10px;

        margin-top: 3px;
    }
}

.video-timestamp-outputs {
    grid-column: full-width;
}